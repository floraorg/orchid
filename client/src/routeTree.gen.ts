/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LogoutImport } from './routes/logout'
import { Route as LoginImport } from './routes/login'
import { Route as EditorImport } from './routes/editor'
import { Route as IndexImport } from './routes/index'
import { Route as MarketplaceIndexImport } from './routes/marketplace/index'
import { Route as MarketplaceNewImport } from './routes/marketplace/new'
import { Route as AuthCallbackImport } from './routes/auth/callback'

// Create/Update Routes

const LogoutRoute = LogoutImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const EditorRoute = EditorImport.update({
  id: '/editor',
  path: '/editor',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MarketplaceIndexRoute = MarketplaceIndexImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => rootRoute,
} as any)

const MarketplaceNewRoute = MarketplaceNewImport.update({
  id: '/marketplace/new',
  path: '/marketplace/new',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/editor': {
      id: '/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/marketplace/new': {
      id: '/marketplace/new'
      path: '/marketplace/new'
      fullPath: '/marketplace/new'
      preLoaderRoute: typeof MarketplaceNewImport
      parentRoute: typeof rootRoute
    }
    '/marketplace/': {
      id: '/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/editor': typeof EditorRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/marketplace/new': typeof MarketplaceNewRoute
  '/marketplace': typeof MarketplaceIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/editor': typeof EditorRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/marketplace/new': typeof MarketplaceNewRoute
  '/marketplace': typeof MarketplaceIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/editor': typeof EditorRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/marketplace/new': typeof MarketplaceNewRoute
  '/marketplace/': typeof MarketplaceIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/editor'
    | '/login'
    | '/logout'
    | '/auth/callback'
    | '/marketplace/new'
    | '/marketplace'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/editor'
    | '/login'
    | '/logout'
    | '/auth/callback'
    | '/marketplace/new'
    | '/marketplace'
  id:
    | '__root__'
    | '/'
    | '/editor'
    | '/login'
    | '/logout'
    | '/auth/callback'
    | '/marketplace/new'
    | '/marketplace/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EditorRoute: typeof EditorRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  MarketplaceNewRoute: typeof MarketplaceNewRoute
  MarketplaceIndexRoute: typeof MarketplaceIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EditorRoute: EditorRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  MarketplaceNewRoute: MarketplaceNewRoute,
  MarketplaceIndexRoute: MarketplaceIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/editor",
        "/login",
        "/logout",
        "/auth/callback",
        "/marketplace/new",
        "/marketplace/"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/editor": {
      "filePath": "editor.jsx"
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/logout": {
      "filePath": "logout.jsx"
    },
    "/auth/callback": {
      "filePath": "auth/callback.jsx"
    },
    "/marketplace/new": {
      "filePath": "marketplace/new.jsx"
    },
    "/marketplace/": {
      "filePath": "marketplace/index.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
